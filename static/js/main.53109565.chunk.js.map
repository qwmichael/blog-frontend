{"version":3,"sources":["pages/HomePage.js","pages/ArticleContent.js","pages/NotFoundPage.js","pages/ArticlePage.js","pages/ArticlesList.js","pages/ArticlesListPage.js","pages/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","className","articles","name","title","date","content","NotFoundPage","ArticlePage","match","params","article","articleContent","find","map","paragraph","key","ReactHtmlParser","ArticlesList","reverse","Card","Body","to","process","ArticlesListPage","ArticleContet","AboutPage","href","mySounds","App","nextSong","e","preventDefault","index","Number","window","localStorage","getItem","length","setItem","document","getElementById","src","setAttribute","console","log","Navbar","bg","variant","Brand","Image","roundedCircle","width","height","Nav","Link","Button","onClick","m","controls","Math","floor","random","newindex","chooseSong","onEnded","id","controlsList","path","component","exact","Boolean","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53109565.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst HomePage = () => (\r\n    <>\r\n    <h1>Welcome to my blog!</h1>\r\n    <br/>\r\n    <div className=\"bubble\">\r\n        <blockquote> The limits of my language are the limits of my world.</blockquote>\r\n        <br/>\r\n        <cite>Ludwig Wittgenstein , Tractatus Logico-Philosophicus , 1922</cite>\r\n    </div>\r\n    \r\n    </>\r\n);\r\n\r\n\r\n\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n","const articles = [\r\n    {\r\n        name: '1',\r\n        title: 'Learning Software: Anki',\r\n        date: '24/1/2020',\r\n        content: [\r\n            `Welcome! Today we're going to be talking about Anki. If you have never heard of Anki and \r\n            you are struggling on memorizing stuff, then this is a perfect opportunity for you to try \r\n            it out now. The link is <a href=\"//apps.ankiweb.net/\">here</a>. If you are using a mobile device, you can search\r\n            Anki up in the play store or app store. The installation should be very simple so I'm not going to go through it here.`,\r\n            `<b> Anki is a program which makes remembering things easy. Because it's a lot \r\n            more efficient than traditional study methods, you can either greatly decrease your time \r\n            spent studying, or greatly increase the amount you learn. </b> This is the official description of what Anki is. You \r\n            might be wondering how this is going to help you improve your memorizing skill. You can think of it as pump card if \r\n            u have never used it before. What it does is to allow the user to create their pump card and also customize their \r\n            deck. If you are coming from a programming background like me, this gave us a very flexible way to manage our study. \r\n            You can choose to focus on the difficult concept more frequently. For example, you can choose to study a card daily \r\n            if you can't remember the meaning of the letter in that language. This will require a lot more time to accomplish \r\n            in the traditional method and Anki manage this hassle for us.  `,\r\n            `\r\n            Wait for a second, you might want to ask a question now, How can I study if I am too lazy to make my own deck?  \r\n            The answer is very simple. YOU DON'T. The best feature that Anki developed is to share decks with other \r\n            learners. The link is right <a href=\"//ankiweb.net/shared/decks/\">here</a>. This should be enough for you to get started. \r\n            Go get a new deck and start learning!! `,\r\n        ]\r\n    }\r\n];\r\n\r\nexport default articles;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <>\r\n        <h1>404 Not Found</h1>\r\n    </>\r\n    \r\n)\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport articleContent from './ArticleContent'\r\nimport NotFoundPage from './NotFoundPage';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\nconst ArticlePage = ({match}) => {\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name === name);\r\n    if (!article) return <NotFoundPage/>\r\n\r\n    return (\r\n        <>\r\n        <header>\r\n            <h1>{article.title}</h1>\r\n        </header>\r\n        <br/>\r\n        {article.content.map((paragraph, key) => (         \r\n            <p className=\"p\" key={key}>{ ReactHtmlParser (paragraph)}</p>\r\n        ))}\r\n        <br/>\r\n        <br/>\r\n        </>\r\n)};\r\n\r\nexport default ArticlePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst ArticlesList = ({articles}) => (\r\n    <>\r\n    <section>\r\n    {articles.reverse().map((article, key) => (\r\n        <>\r\n        <Card className=\"Card\">\r\n            <Card.Body>\r\n            <h6>{article.date}</h6>\r\n            <Link className=\"article-list-item\" key={key} to={process.env.PUBLIC_URL + `/article/${article.name}`}>\r\n                <h4>{article.title}</h4>\r\n            </Link>\r\n            </Card.Body>\r\n        </Card>\r\n        \r\n        <br/>\r\n        </>\r\n    ))}\r\n    </section>\r\n    </>\r\n)\r\n\r\nexport default ArticlesList;\r\n   \r\n","import React from 'react';\r\nimport ArticleContet from './ArticleContent';\r\nimport ArticlesList from './ArticlesList'\r\nconst ArticlesListPage = () => (\r\n\r\n    <>\r\n    <header>\r\n        <h1>Article List</h1>\r\n    </header>\r\n    <br/>\r\n    <ArticlesList articles={ArticleContet}/>\r\n    </>\r\n);\r\n\r\nexport default ArticlesListPage; ","import React from 'react';\r\n\r\nconst AboutPage = () => (\r\n    <>\r\n    <div>\r\n    <h1>About me</h1>\r\n    <br/>\r\n    <p>Hi all, Thanks for visiting my blog and my name is Michael, currently studying Software Engineering at UNSW Sydney. \r\n        The reason why I created this blog is to share some of my thought and the difficulty that I encounter in the learning process. I hope my articles can help anyone of you guys to understand new things or reinforce your existed knowledge. I have a lot of interest including Japanese, programming, reading and listening to music. Those will be mainly the content that I'm going to share.</p>\r\n\r\n    <p>I'm currently looking for any oppotunity. Feel free to email me  <a href=\"mailto:michaelng9413@gmail.com\">michaelng9413@gmail.com</a>.</p>\r\n    </div>\r\n    </>\r\n);\r\n\r\nexport default AboutPage;","import React from 'react';\nimport HomePage from './pages/HomePage';\nimport ArticlePage from './pages/ArticlePage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport AboutPage from './pages/AboutPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {Navbar, Nav, Image, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nvar mySounds = ['1.mp3', '2.mp3', \"3.mp3\",\"4.flac\",\"5.mp3\",\"6.mp3\",\"7.mp3\",\"8.flac\",\"9.mp3\",\"10.mp3\",\"11.mp3\"];\n\nfunction App() {\n  \n  function chooseSong() {   \n    if (window.localStorage.getItem('index') == null) window.localStorage.setItem(\"index\",Math.floor(Math.random() * 1000) % mySounds.length); \n    let newindex = Math.floor(Math.random() * 1000) % mySounds.length;\n    while (newindex == window.localStorage.getItem('index')) {\n      newindex = Math.floor(Math.random() * 1000) % mySounds.length;\n    }\n    window.localStorage.setItem('index', newindex);\n    return mySounds[newindex];\n  }\n\n  function mod(n, m) {\n    return ((n % m) + m) % m;\n  }\n  function backSong(e) {\n    e.preventDefault();\n    \n    let index = mod(Number(window.localStorage.getItem('index')) - 1,mySounds.length);\n    window.localStorage.setItem('index', index);\n    document.getElementById('audio').src = mySounds[index];\n    document.getElementById('audio').setAttribute('autoplay', \"\");\n    console.log(\"index is \" + window.localStorage.getItem(\"index\"));\n  }\n\n  function nextSong(e) {\n    e.preventDefault();\n    let index = (Number(window.localStorage.getItem(\"index\")) + 1) % mySounds.length;\n    window.localStorage.setItem(\"index\", index);\n    document.getElementById('audio').src = mySounds[index];\n    document.getElementById('audio').setAttribute(\"autoplay\", \"\")\n   \n  }\n  console.log(process.env.PUBLIC_URL);\n\n  return (\n    <Router >   \n       <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href={process.env.PUBLIC_URL + \"/\"}>\n              <Image src=\"hibibg.png\" roundedCircle width=\"50\" height=\"50\" />\n             </Navbar.Brand>\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"/about\">About</Nav.Link>\n              <Nav.Link href=\"/articles-list\">Articles</Nav.Link>\n            </Nav>\n            <Button variant=\"light\" className=\"right-buffer\" onClick={backSong}>&lt;</Button>\n            <Button variant=\"light\" className=\"right-buffer\" onClick={nextSong}>></Button>            \n            <audio controls src={chooseSong()} onEnded={nextSong} id='audio' controlsList=\"nodownload\">\n            </audio>\n      </Navbar>\n\n      <div id='page-body'>   \n        <div className=\"App\">     \n            <Switch>\n              <Route path={process.env.PUBLIC_URL + '/'} component={HomePage} exact/>\n              <Route path={process.env.PUBLIC_URL + \"/about\"} component={AboutPage} exact/>\n              <Route path={process.env.PUBLIC_URL + \"/articles-list\"} component={ArticlesListPage} exact/>\n              <Route path={process.env.PUBLIC_URL + \"/article/:name\"} component={ArticlePage} exact/>  \n              <Route component={NotFoundPage}></Route>\n            </Switch> \n        </div>\n      </div>\n  \n      </Router>\n    \n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}